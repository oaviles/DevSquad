{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    "acrName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 50,
      "metadata": {
        "description": "Name of your Azure Container Registry"
      }
    },
    "acrAdminUserEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable admin user that have push / pull permission to the registry."
      }
    },
    "acrSku": {
      "type": "string",
      "metadata": {
        "description": "Tier of your Azure Container Registry."
      },
      "defaultValue": "Basic"
    },
        "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "staticWebSiteN": {
        "type": "string",
         "value": null
      },
        "serviceBusNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
            }
        },
        "serviceBusSku": {
      "type": "string",
      "defaultValue": "Basic",
      "metadata": {
        "description": "The messaging tier for service Bus namespace"
            }
        },
        "siteNameF": {
            "type": "string",
            "defaultValue": "[concat('FuncApp-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of you Web Site."
            }
        },
        "storageAccountNameF": {
            "type": "String",
            "defaultValue": "[concat('store', uniqueString(resourceGroup().id))]"
        },
        "dbName": {
           "type": "String",
           "defaultValue": "canvia"
        },
        "clusterName": {
        "type": "string",
        "defaultValue": "aks101cluster",
        "metadata": {
          "description": "The name of the Managed Cluster resource."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The location of the Managed Cluster resource."
        }
      },
      "dnsPrefix": {
        "type": "string",
        "metadata": {
          "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
        }
      },
      "osDiskSizeGB": {
        "type": "int",
        "defaultValue": 0,
        "minValue": 0,
        "maxValue": 1023,
        "metadata": {
          "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
        }
      },
      "agentCount": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 3,
        "metadata": {
          "description": "The number of nodes for the cluster."
        }
      },
      "agentVMSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "The size of the Virtual Machine."
        }
      },
      "linuxAdminUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the Linux Virtual Machines."
        }
      },
      "sshRSAPublicKey": {
        "type": "string",
        "metadata": {
          "description": "Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
        }
      },
      "osType": {
        "type": "string",
        "defaultValue": "Linux",
        "allowedValues": [
          "Linux"
        ],
        "metadata": {
          "description": "The type of operating system."
        }
      },
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Name of environment"
            },
            "allowedValues": [
                "dev",
                "test",
                "production"
            ]
        },
        "administratorLogin": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Database administrator login name"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "minLength": 8,
            "maxLength": 128,
            "metadata": {
                "description": "Database administrator password"
            }
        },
        "databaseSkuCapacity": {
            "type": "int",
            "defaultValue": 2,
            "allowedValues": [
                2,
                4,
                8,
                16,
                32
            ],
            "metadata": {
                "description": "Azure database for PostgreSQL compute capacity in vCores (2,4,8,16,32)"
            }
        },
        "databaseSkuName": {
            "type": "string",
            "defaultValue": "GP_Gen5_2",
            "allowedValues": [
                "GP_Gen5_2",
                "GP_Gen5_4",
                "GP_Gen5_8",
                "GP_Gen5_16",
                "GP_Gen5_32",
                "MO_Gen5_2",
                "MO_Gen5_4",
                "MO_Gen5_8",
                "MO_Gen5_16",
                "MO_Gen5_32"
            ],
            "metadata": {
                "description": "Azure database for PostgreSQL sku name "
            }
        },
        "databaseSkuSizeMB": {
            "type": "int",
            "allowedValues": [
                102400,
                51200
            ],
            "defaultValue": 51200,
            "metadata": {
                "description": "Azure database for PostgreSQL Sku Size "
            }
        },
        "databaseSkuTier": {
            "type": "string",
            "defaultValue": "GeneralPurpose",
            "allowedValues": [
                "GeneralPurpose",
                "MemoryOptimized"
            ],
            "metadata": {
                "description": "Azure database for PostgreSQL pricing tier"
            }
        },
        "postgresqlVersion": {
            "type": "string",
            "allowedValues": [
                "9.5",
                "9.6"
            ],
            "defaultValue": "9.6",
            "metadata": {
                "description": "PostgreSQL version"
            }
        },
        "databaseskuFamily": {
            "type": "string",
            "defaultValue": "Gen5",
            "metadata": {
                "description": "Azure database for PostgreSQL sku family"
            }
        }
    },
    "variables": {
        "databaseName": "[concat(parameters('dbName'), 'db', parameters('environment'), uniqueString(resourceGroup().id))]",
        "serverName": "[concat(parameters('dbName'), 'pgserver', parameters('environment'), uniqueString(resourceGroup().id))]",
        "hostingPlanNameF": "[concat('hpn-', resourceGroup().name)]",
        "storageAccountid": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountNameF'))]",
        "storageAccountNV": "[concat(parameters('staticWebSiteN'), uniquestring(resourceGroup().id))]"
    },
    "resources": [
        {
      "name": "[parameters('acrName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2019-12-01-preview",
      "location": "[parameters('location')]",
      "comments": "Container registry for storing docker images",
      "tags": {
        "displayName": "Container Registry",
        "container.registry": "[parameters('acrName')]"
      },
      "sku": {
        "name": "[parameters('acrSku')]",
        "tier": "[parameters('acrSku')]"
      },
      "properties": {
        "adminUserEnabled": "[parameters('acrAdminUserEnabled')]"
      }
    },
         {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('storageAccountNV')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        },
        "kind": "StorageV2",
        "properties": {
                "accessTier": "Hot"
            }
      },
        {
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('serviceBusNamespaceName')]",
            "type": "Microsoft.ServiceBus/namespaces",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('serviceBusSku')]"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[parameters('siteNameF')]",
            "kind": "functionapp,linux",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanNameF'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountNameF'))]"
            ],
            "properties": {
                "name": "[parameters('siteNameF')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountNameF'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
                        }
                    ]
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanNameF'))]",
                "clientAffinityEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[variables('hostingPlanNameF')]",
            "location": "[parameters('location')]",
            "kind": "linux",
            "properties": {
                "reserved": true
            },
            "sku": {
                "Tier": "Dynamic",
                "Name": "Y1"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountNameF')]",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            }
        },
        {
        "type": "Microsoft.ContainerService/managedClusters",
        "apiVersion": "2020-03-01",
        "name": "[parameters('clusterName')]",
        "location": "[parameters('location')]",
        "properties": {
          "dnsPrefix": "[parameters('dnsPrefix')]",
          "agentPoolProfiles": [
            {
              "name": "agentpool",
              "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
              "count": "[parameters('agentCount')]",
              "vmSize": "[parameters('agentVMSize')]",
              "osType": "[parameters('osType')]",
              "storageProfile": "ManagedDisks"
            }
          ],
          "linuxProfile": {
            "adminUsername": "[parameters('linuxAdminUsername')]",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]"
                }
              ]
            }
          }
        },
        "identity": {
            "type": "SystemAssigned"
        }
      },
        {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.DBforPostgreSQL/servers",
            "location": "[parameters('location')]",
            "name": "[variables('serverName')]",
            "sku": {
                "name": "[parameters('databaseSkuName')]",
                "tier": "[parameters('databaseSkuTier')]",
                "capacity": "[parameters('databaseSkucapacity')]",
                "size": "[parameters('databaseSkuSizeMB')]",
                "family": "[parameters('databaseskuFamily')]"
            },
            "properties": {
                "version": "[parameters('postgresqlVersion')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storageMB": "[parameters('databaseSkuSizeMB')]"
            },
            "resources": [
                {
                    "type": "firewallRules",
                    "apiVersion": "2017-12-01",
                    "dependsOn": [
                        "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "[concat(variables('serverName'),'firewall')]",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                },
                {
                    "name": "[variables('databaseName')]",
                    "type": "databases",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "charset": "utf8",
                        "collation": "English_United States.1252"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
                    ]
                }
            ]
        }
    ]
}
